!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o=e();for(var i in o)("object"==typeof exports?exports:t)[i]=o[i]}}(self,(function(){return function(){"use strict";var t={d:function(e,o){for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{default:function(){return d}});var o={version:"1.0.3",install:function(t,e={}){const{propertyId:o,widgetId:i}=e;if(!o||"string"!=typeof o)return void console.error("[Tawk-messenger-vue warn]: You didn't specified 'propertyId' property in the plugin.");if(!i||"string"!=typeof i)return void console.error("[Tawk-messenger-vue warn]: You didn't specified 'widgetId' property in the plugin.");const d=new t;new class{constructor(t,e){e.propertyId&&"string"==typeof e.propertyId&&e.widgetId&&"string"==typeof e.widgetId&&(this.root=t,this.propertyId=e.propertyId,this.widgetId=e.widgetId,this.embedId=e.embedId,this.customStyle=e.customStyle,this.basePath=e.basePath,this.load())}load(){window&&document&&(window.Tawk_API=window.Tawk_API||{},window.Tawk_LoadStart=new Date,function({propertyId:t="",widgetId:e="",embedId:o="",basePath:i="tawk.to"}){if(o.length){if(!document.getElementById(o)){const t=document.createElement("div");t.id=o,document.body.appendChild(t)}window.Tawk_API.embedded=o}const d=document.createElement("script");d.async=!0,d.src=`https://embed.${i}/${t}/${e}`,d.charset="UTF-8",d.setAttribute("crossorigin","*");const n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(d,n)}({propertyId:this.propertyId,widgetId:this.widgetId,embedId:this.embedId,basePath:this.basePath}),this.init())}init(){this.customStyle&&"object"==typeof this.customStyle&&(window.Tawk_API.customStyle=this.customStyle),this.root.maximize=()=>window.Tawk_API.maximize(),this.root.minimize=()=>window.Tawk_API.minimize(),this.root.toggle=()=>window.Tawk_API.toggle(),this.root.popup=()=>window.Tawk_API.popup(),this.root.showWidget=()=>window.Tawk_API.showWidget(),this.root.hideWidget=()=>window.Tawk_API.hideWidget(),this.root.toggleVisibility=()=>window.Tawk_API.toggleVisibility(),this.root.endChat=()=>window.Tawk_API.endChat(),this.root.getWindowType=()=>window.Tawk_API.getWindowType(),this.root.getStatus=()=>window.Tawk_API.getStatus(),this.root.isChatMaximized=()=>window.Tawk_API.isChatMaximized(),this.root.isChatMinimized=()=>window.Tawk_API.isChatMinimized(),this.root.isChatHidden=()=>window.Tawk_API.isChatHidden(),this.root.isChatOngoing=()=>window.Tawk_API.isChatOngoing(),this.root.isVisitorEngaged=()=>window.Tawk_API.isVisitorEngaged(),this.root.onLoaded=()=>window.Tawk_API.onLoaded,this.root.onBeforeLoaded=()=>window.Tawk_API.onBeforeLoaded,this.root.widgetPosition=()=>window.Tawk_API.widgetPosition(),this.root.visitor=t=>window.Tawk_API.visitor=t,this.root.setAttributes=(t,e)=>window.Tawk_API.setAttributes(t,e),this.root.addEvent=(t,e,o)=>window.Tawk_API.addEvent(t,e,o),this.root.addTags=(t,e)=>window.Tawk_API.addTags(t,e),this.root.removeTags=(t,e)=>window.Tawk_API.removeTags(t,e)}}(d,e),t.prototype.$tawkMessenger=d}};const i=o.install;o.install=(t,e)=>{i.call(o,t,{...e})};var d=o;return e}()}));